import { GoogleGenAI, Modality } from "@google/genai";

const ai = new GoogleGenAI({ apiKey: process.env.API_KEY as string });

export const generateProductImage = async (mockupBase64: string, cardBase64: string, mockupMimeType: string, cardMimeType: string): Promise<string> => {
    try {
        const mockupPart = {
            inlineData: {
                data: mockupBase64.split(',')[1],
                mimeType: mockupMimeType,
            },
        };

        const cardPart = {
            inlineData: {
                data: cardBase64.split(',')[1],
                mimeType: cardMimeType,
            },
        };

        const textPart = {
            text: `You are an expert photorealistic product image editor. Your task is to seamlessly replace the solid green screen area of the first image (the jewelry mockup) with the second image (the message card). It is crucial that you intelligently warp and adjust the perspective of the message card to perfectly match the angle, slant, and orientation of the green screen surface in the mockup. Maintain the exact appearance, lighting, shadows, and quality of the jewelry and its surrounding background from the first image. The message card's design, text, and quality must remain completely unchanged. The final output must be a single, flawless, photorealistic image.`,
        };

        const response = await ai.models.generateContent({
            model: 'gemini-2.5-flash-image',
            contents: {
                parts: [mockupPart, cardPart, textPart],
            },
            config: {
                responseModalities: [Modality.IMAGE],
            },
        });

        for (const part of response.candidates[0].content.parts) {
            if (part.inlineData) {
                const base64ImageBytes: string = part.inlineData.data;
                const imageUrl = `data:${part.inlineData.mimeType};base64,${base64ImageBytes}`;
                return imageUrl;
            }
        }
        
        throw new Error("No image was generated by the API.");
        
    } catch (error) {
        console.error("Error generating image with Gemini:", error);
        throw new Error("Failed to generate product image. Please check the console for details.");
    }
};
